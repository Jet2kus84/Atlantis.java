{"name":"Atlantisengine.java","tagline":"A port of my JavaScript 2D Game Engine in Java","body":"AtlantisGameEngine4Java\r\n=======================\r\n\r\n### Summary\r\nAtlantis Engine is a work in progress Java 2D Game Engine. It is mainly inspired by XNA and Flixel.\r\nThis is a port of AtantisEngine.js\r\n\r\n### Features\r\n* Content manager \r\n* Game component system\r\n* Input management (Keyboard, Mouse)\r\n* Sprite with easy animation and a bit of physics\r\n* SpriteGroup\r\n* State and state manager\r\n\r\n### The next\r\n* Basic and isometric tilemap\r\n* Scene camera\r\n* More utilities (Inerpolator, etc.)\r\n\r\n### Example\r\n\r\n```java\r\nimport java.awt.Graphics;\r\nimport java.awt.event.KeyEvent;\r\nimport atlantis.engine.graphics.Entity;\r\nimport atlantis.engine.graphics.Sprite;\r\nimport atlantis.framework.Game;\r\nimport atlantis.framework.GameDesktop;\r\nimport atlantis.framework.GameTime;\r\n\r\npublic class SpriteGame extends GameDesktop {\r\n\tprivate Entity background;\r\n\tprivate Sprite sprite;\r\n\t\r\n\tpublic SpriteGame() {\r\n\t\tsuper(1024, 600, \"Atlantis Game Engine for Java - Sprite Sample\");\r\n\t\tthis.background = new Entity(\"background.png\");\r\n\t\tthis.sprite = new Sprite(\"BRivera-femaleelfwalk.png\");\r\n\t\tthis.sprite.setViewport(0, 0, this.width, this.height);\r\n\t\tthis.sprite.setInsideScreen(true);\r\n\t}\r\n\t\r\n\tpublic void loadContent() {\r\n\t\tsuper.loadContent();\r\n\t\t\r\n\t\tthis.background.loadContent(this.content);\r\n\t\tthis.background.setSize(this.width, this.height);\r\n\t\t\r\n\t\t// Add animation to the sprite\r\n\t\tthis.sprite.loadContent(this.content);\r\n\t\tthis.sprite.prepareAnimation(64, 64);\r\n\t\tthis.sprite.addAnimation(\"up\", new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8 }, 75);\r\n\t\tthis.sprite.addAnimation(\"left\", new int[] { 9, 10, 11, 12, 13, 14, 15, 16, 17 }, 75);\r\n\t\tthis.sprite.addAnimation(\"down\", new int[] { 18, 19, 20, 21, 22, 23, 24, 25, 26 }, 75);\r\n\t\tthis.sprite.addAnimation(\"right\", new int[] { 27, 28, 29, 30, 31, 32, 33, 34, 35 }, 75);\r\n\t    \r\n\t    this.sprite.setSize(72, 72);\r\n\t    this.sprite.setPosition(\r\n\t    \t\tthis.width / 2 - this.sprite.getWidth() / 2,\r\n\t    \t\tthis.height / 2 - this.sprite.getHeight() / 2);\r\n\t}\r\n\t\r\n\tpublic void update(GameTime gameTime) {\r\n\t\tsuper.update(gameTime);\r\n\t\t\r\n\t\tthis.sprite.update(gameTime);\r\n\t\t\r\n\t\tif (this.keyboardState.isKeyDown(KeyEvent.VK_UP)) {\r\n\t\t\tthis.sprite.play(\"up\");\r\n\t\t\tthis.sprite.setY(this.sprite.getY() - 1);\r\n\t\t}\r\n\t\telse if (this.keyboardState.isKeyDown(KeyEvent.VK_DOWN)) {\r\n\t\t\tthis.sprite.play(\"down\");\r\n\t\t\tthis.sprite.setY(this.sprite.getY() + 1);\r\n\t\t}\r\n\t\t\r\n\t\tif (this.keyboardState.isKeyDown(KeyEvent.VK_RIGHT)) {\r\n\t\t\tthis.sprite.play(\"right\");\r\n\t\t\tthis.sprite.setX(this.sprite.getX() + 1);\r\n\t\t}\r\n\t\telse if (this.keyboardState.isKeyDown(KeyEvent.VK_LEFT)) {\r\n\t\t\tthis.sprite.play(\"left\");\r\n\t\t\tthis.sprite.setX(this.sprite.getX() - 1);\r\n\t\t}\r\n\t\t\r\n\t\tif (this.keyboardState.isKeyDown(KeyEvent.VK_ESCAPE)) {\r\n\t\t\tthis.exit();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void draw(Graphics graphics) {\r\n\t\tsuper.draw(graphics);\r\n\t\tthis.background.draw(graphics);\r\n\t\tthis.sprite.draw(graphics);\r\n\t}\r\n\r\n\tpublic static void main(String [] args) {\r\n\t\tSpriteGame game = new SpriteGame();\r\n\t\tgame.run();\r\n\t}\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}